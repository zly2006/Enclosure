plugins {
    id "fabric-loom" version "1.6-SNAPSHOT" apply false
    id "maven-publish"
    id "org.ajoberstar.grgit" version "5.2.2"
    id "org.jetbrains.kotlin.jvm" version "2.0.0"
}

allprojects {
    apply plugin: "fabric-loom"
    apply plugin: "maven-publish"

    repositories {
        mavenCentral()
        maven { url = "https://maven.fabricmc.net/" }
        maven { url = "https://oss.sonatype.org/content/repositories/snapshots" }
        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"
        }
        maven { url "https://maven.shedaniel.me" }

        maven {
            name = "Reden"
            url = ("https://maven.starlight.cool/artifactory/reden")
        }
    }

    base {
        archivesName = project.archives_base_name
    }

    processResources {
        inputs.property "version", rootProject.version

        filesMatching("fabric.mod.json") {
            expand "version": rootProject.version
        }
    }

    dependencies {
        // Minecraft
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings "net.fabricmc:yarn:${rootProject.yarn_mappings}:v2"
        modImplementation "net.fabricmc:fabric-loader:${rootProject.loader_version}"
        // Fabric API
        modImplementation "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_version}"
        // Kotlin support
        modImplementation("net.fabricmc:fabric-language-kotlin:1.10.17+kotlin.1.9.22")
    }

    tasks.withType(JavaCompile).configureEach {
        // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
        it.options.release = 17
    }

    kotlin {
        jvmToolchain(17)
    }

    java {
        // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
        // if it is present.
        // If you remove this line, sources will not be generated.
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
if (project.archices_preview_version.empty) {
    version = project.mod_version + "+" + grgit.branch.current().name // usually branch name is the mc version
} else {
    version = project.mod_version + "-" + project.archices_preview_version + "+" + grgit.branch.current().name + "-" + grgit.head().id.substring(0, 8)
}
group = project.maven_group


subprojects {
    dependencies {
//        exclude group: "net.fabricmc", module: "fabric-loader"
    }
}

loom {
    accessWidenerPath = file("src/main/resources/enclosure.accesswidener")
}

dependencies {
    modRuntimeOnly "maven.modrinth:luckperms:v5.4.113-fabric"

    // SnakeYAML. To convert the old config
    include(modImplementation("org.yaml:snakeyaml:1.33"))

    include(implementation("com.redenmc:brigadier-kotlin-dsl:1.0-SNAPSHOT"))

    // Fabric Permissions API. To check the permissions
    include(modImplementation('me.lucko:fabric-permissions-api:0.2-SNAPSHOT'))
    // REI. To avoid the REI GUI overlap with the Enclosure GUI
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"

    println("Loading subprojects...")
    subprojects.each {
        it.dependencies {
            implementation project(':')
        }
        implementation project(path: ":${it.name}", configuration: "namedElements")
        include project("${it.name}:")
        clean.dependsOn("${it.name}:clean")
        println("Loaded " + it.name)
    }
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${base.archivesName.get()}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
